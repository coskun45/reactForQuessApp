{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ecoskun.ADESSO\\\\Desktop\\\\FullstackSpringReact\\\\frontend\\\\my-app\\\\src\\\\components\\\\Home\\\\Home.js\",\n  _s = $RefreshSig$();\nimport Post from './../Post/Post';\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [postList, setPostList] = useState([]);\n\n  // Note: the empty deps array [] means\n  // this useEffect will run once\n  // similar to componentDidMount()\n  useEffect(() => {\n    fetch(\"/posts\").then(res => res.json()).then(result => {\n      setIsLoaded(true);\n      setPostList(result);\n    },\n    // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: postList.map(post => /*#__PURE__*/_jsxDEV(Post, {\n        title: post.title,\n        text: post.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n}\n_s(Home, \"H4YLgqKE4ziVJ/DiQo+X9quRNzE=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["Post","React","useEffect","useState","jsxDEV","_jsxDEV","Home","_s","error","setError","isLoaded","setIsLoaded","postList","setPostList","fetch","then","res","json","result","children","message","fileName","_jsxFileName","lineNumber","columnNumber","map","post","title","text","_c","$RefreshReg$"],"sources":["C:/Users/ecoskun.ADESSO/Desktop/FullstackSpringReact/frontend/my-app/src/components/Home/Home.js"],"sourcesContent":["import Post from './../Post/Post';\r\nimport React, { useEffect, useState } from 'react'\r\n\r\n\r\nfunction Home() {\r\n  const [error, setError] = useState(null);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [postList, setPostList] = useState([]);\r\n\r\n  // Note: the empty deps array [] means\r\n  // this useEffect will run once\r\n  // similar to componentDidMount()\r\n  useEffect(() => {\r\n    fetch(\"/posts\")\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          setIsLoaded(true);\r\n          setPostList(result);\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          setIsLoaded(true);\r\n          setError(error);\r\n        }\r\n      )\r\n  }, [])\r\n\r\n  if (error) {\r\n    return <div>Error: {error.message}</div>;\r\n  } else if (!isLoaded) {\r\n    return <div>Loading...</div>;\r\n  } else {\r\n    return (\r\n      <ul>\r\n        {postList.map(post => (\r\n          <Post title={post.title} text={post.text}></Post>\r\n         \r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default Home"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,gBAAgB;AACjC,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGlD,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;;EAE5C;EACA;EACA;EACAD,SAAS,CAAC,MAAM;IACdY,KAAK,CAAC,QAAQ,CAAC,CACZC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CACFG,MAAM,IAAK;MACVP,WAAW,CAAC,IAAI,CAAC;MACjBE,WAAW,CAACK,MAAM,CAAC;IACrB,CAAC;IACD;IACA;IACA;IACCV,KAAK,IAAK;MACTG,WAAW,CAAC,IAAI,CAAC;MACjBF,QAAQ,CAACD,KAAK,CAAC;IACjB,CAAC,CACF;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIA,KAAK,EAAE;IACT,oBAAOH,OAAA;MAAAc,QAAA,GAAK,SAAO,EAACX,KAAK,CAACY,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO;EAC1C,CAAC,MAAM,IAAI,CAACd,QAAQ,EAAE;IACpB,oBAAOL,OAAA;MAAAc,QAAA,EAAK;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM;EAC9B,CAAC,MAAM;IACL,oBACEnB,OAAA;MAAAc,QAAA,EACGP,QAAQ,CAACa,GAAG,CAACC,IAAI,iBAChBrB,OAAA,CAACL,IAAI;QAAC2B,KAAK,EAAED,IAAI,CAACC,KAAM;QAACC,IAAI,EAAEF,IAAI,CAACE;MAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAE1C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACC;EAET;AAEF;AAACjB,EAAA,CAzCQD,IAAI;AAAAuB,EAAA,GAAJvB,IAAI;AA2Cb,eAAeA,IAAI;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}